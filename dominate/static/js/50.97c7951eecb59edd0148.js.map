{"version":3,"sources":["webpack:///static/js/50.97c7951eecb59edd0148.js","webpack:///./src/components/book/edit_chapter.vue","webpack:///src/components/book/edit_chapter.vue","webpack:///./src/components/book/edit_chapter.vue?a657"],"names":["webpackJsonp","6JdH","module","exports","Tfte","__webpack_exports__","__webpack_require__","injectStyle","context","Object","defineProperty","value","stringify","stringify_default","n","edit_chapter","data","_this","this","validateVolume","rule","callback","$http","trim","length","volumeForm","volumeName","Error","$ajax","bookid","ruleForm","bookId","json","returnCode","msg","validateCheckCn","chapterTitle","oldChapterName","chapterName","$message","pickerOptions","disabledDate","time","getTime","Date","now","isLoading","undefined","isRload","iframeShow","dialogSize","original","volumeList","isAutoPublish","labelWidth","dialogFormVisible","editContent","initial","cidList","bookTitle","volumeId","releaseTime","chapterContent","whetherPublic","chapterLength","chapterIsvip","authorWords","issue","update","required","validator","trigger","rules","type","message","methods","submitForm","_this2","$loading","lock","text","spinner","background","$refs","validate","valid","$nextTick","close","editChapter","_this3","$confirm","confirmButtonText","cancelButtonText","cloneData","JSON","parse","release","then","getChapterInfo","catch","replace","$formTime","beijing","nodeList","document","getElementById","childNodes","i","len","innerText","getAttribute","addNewVolume","formName","_this4","bookName","$route","params","bid","_this5","reg1","reg2","chapterid","cid","createChapterTime","idList","match","txtList","split","forEach","item","index","push","uuid","content","getVolume","setTimeout","count","setInterval","$set","_this6","checkChapterName","event","target","editChange","e","parents","pList","style","setAttribute","innerHTML","p","createElement","insertBefore","changeVolume","val","_this7","id","volumeid","preventCopy","keyCode","returnValue","created","windowWidth","body","clientWidth","watch","ruleForm.chapterContent","isUpDate","ruleForm.authorWords","substr","computed","sLen","str","console","log","isChange","state","nowTime","authority","$store","userInfo","adminRolemenuanduserrole","mounted","_this8","window","onresize","width","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator-class","_v","to","title","show-icon","slot","ref","model","label-width","labelPosition","label","prop","staticStyle","readonly","$$v","expression","disabled","updates","placeholder","on","change","_l","key","nativeOn","click","$event","directives","name","rawName","unselectable","contenteditable","input","keydown","$index","_s","_e","margin-top","span","picker-options","top","visible","open","update:visible","label-position","auto-complete","staticRenderFns","component_normalizer","__vue_styles__","Component"],"mappings":"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","file":"static/js/50.97c7951eecb59edd0148.js","sourcesContent":["webpackJsonp([50],{\n\n/***/ \"6JdH\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"Tfte\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/json/stringify.js\nvar stringify = __webpack_require__(\"3cXf\");\nvar stringify_default = /*#__PURE__*/__webpack_require__.n(stringify);\n\n// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.4@babel-loader/lib!./node_modules/_vue-loader@14.2.2@vue-loader/lib/selector.js?type=script&index=0!./src/components/book/edit_chapter.vue\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var edit_chapter = ({\n  data: function data() {\n    var _this = this;\n\n    var validateVolume = function validateVolume(rule, value, callback) {\n      if (!value || _this.$http.trim(value).length < 1) {\n        _this.volumeForm.volumeName = '';\n        callback(new Error('卷名不能为空'));\n      } else {\n        _this.$ajax('/books-getCheckVolume', {\n          volumeName: value,\n          bookid: _this.ruleForm.bookId\n        }, function (json) {\n          if (json.returnCode === 200) {\n            callback();\n          } else {\n            callback(new Error(json.msg));\n          }\n        });\n      }\n    };\n    var validateCheckCn = function validateCheckCn(rule, value, callback) {\n      value = _this.$http.trim(value);\n      if (!value || _this.$http.trim(value).length < 1) {\n        _this.ruleForm.chapterTitle = '';\n        callback(new Error('请输入章节名称'));\n      } else {\n        if (_this.$http.trim(value) === _this.oldChapterName) {\n          callback();\n        } else {\n          _this.$ajax('/chapter-checkName', {\n            chapterName: value,\n            bookId: _this.ruleForm.bookId\n          }, function (json) {\n            if (json.returnCode === 200) {\n              callback();\n            } else {\n              _this.$message('章节名重复，请重新填写！');\n              callback(new Error('章节名重复，请重新填写！'));\n            }\n          });\n        }\n      }\n    };\n    return {\n      pickerOptions: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() < Date.now() - 8.64e7;\n        }\n      },\n      isLoading: undefined,\n      isRload: true,\n      iframeShow: 'hidden',\n      dialogSize: 'tiny',\n      original: {}, // 原始数据\n      volumeList: [], // 书籍卷列表\n      isAutoPublish: false,\n      labelWidth: '136px',\n      dialogFormVisible: false,\n      editContent: '',\n      initial: [],\n      cidList: [], // 章节段ID列表\n      volumeForm: {\n        volumeName: ''\n      },\n      oldChapterName: '',\n      ruleForm: { // 章节信息\n        bookTitle: '',\n        chapterTitle: '',\n        volumeId: null,\n        releaseTime: null,\n        chapterContent: '',\n        whetherPublic: 0,\n        chapterLength: 0,\n        chapterIsvip: 0,\n        authorWords: '',\n        issue: false,\n        update: false\n      },\n      rule: {\n        volumeName: [{ required: true, validator: validateVolume, trigger: 'blur' }]\n      },\n      rules: {\n        chapterTitle: [{ required: true, validator: validateCheckCn, trigger: 'blur' }],\n        volumeId: [{ required: true, type: 'number', message: '请选择分卷', trigger: 'change' }],\n        bookTitle: [{ required: true, message: '请输入书籍名称', trigger: 'blur' }],\n        chapterContent: [{ required: true, message: '请添加章节内容', trigger: 'blur' }],\n        releaseTime: [{ required: true, type: 'date', message: '请选取时间', trigger: 'blur' }]\n      }\n    };\n  },\n\n  methods: {\n    //        添加新章节\n    submitForm: function submitForm(type) {\n      var _this2 = this;\n\n      this.isLoading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      this.$refs['editChapterForm'].validate(function (valid) {\n        if (valid) {\n          if (type === 'draft') {\n            _this2.ruleForm.whetherPublic = 1;\n          }\n          _this2.editChapter();\n        } else {\n          _this2.$nextTick(function () {\n            _this2.isLoading.close();\n          });\n          _this2.$message({ message: '请完善信息后提交！', type: 'warning' });\n          return false;\n        }\n      });\n    },\n    editChapter: function editChapter() {\n      var _this3 = this;\n\n      //          首先获取网络时间\n      if (this.ruleForm.chapterLength > 20000) {\n        this.isLoading.close();\n        this.$confirm('文章内容超出字数长度限制，请保证字数长度在20000以内！', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        return false;\n      }\n      var cloneData = JSON.parse(stringify_default()(this.ruleForm));\n      var release = function release() {\n        _this3.$ajax('/admin/updateChapterInfo', cloneData, function (json) {\n          _this3.isLoading.close();\n          if (json.returnCode === 200) {\n            _this3.$confirm(!cloneData.whetherPublic ? '编辑成功' : cloneData.whetherPublic === 1 ? '保存草稿成功' : '发布成功', '提示', {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n              type: 'warning'\n            }).then(function () {\n              _this3.getChapterInfo();\n            }).catch(function () {\n              _this3.getChapterInfo();\n            });\n          }\n        });\n      };\n      //        草稿\n      if (this.ruleForm.whetherPublic === 1) {\n        //            发布草稿\n        cloneData.chapterContent = this.$http.trim(cloneData.chapterContent).replace(/\\n+\\s+/g, '<H><LG>') + '<H><LG>';\n        cloneData.whetherPublic = cloneData.issue ? 2 : 1;\n        this.$ajax('/sys-getNetWorkDateTime', '', function (time) {\n          if (time.returnCode === 200) {\n            cloneData.releaseTime = _this3.$formTime(time.data.beijing, 'long');\n            release();\n          } else {\n            _this3.isLoading.close();\n          }\n        }, 'get');\n      } else {\n        //        非草稿\n        var nodeList = document.getElementById('content_edit_sole').childNodes;\n        cloneData.chapterContent = '';\n        for (var i = 0, len = nodeList.length; i < len; i++) {\n          if (this.$http.trim(nodeList[i].innerText).length > 0) {\n            cloneData.chapterContent += this.$http.trim(nodeList[i].innerText) + nodeList[i].getAttribute('uuid');\n          }\n        }\n        cloneData.releaseTime = this.$formTime(cloneData.releaseTime, 'long');\n        release();\n      }\n    },\n\n    //      新增分卷\n    addNewVolume: function addNewVolume(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this4.$ajax('/books-addvolume', {\n            volumeName: _this4.volumeForm.volumeName,\n            bookName: _this4.ruleForm.bookTitle,\n            bookid: _this4.$route.params.bid\n          }, function (json) {\n            if (json.returnCode === 200) {\n              _this4.dialogFormVisible = false;\n              _this4.$message('添加成功');\n              _this4.getChapterInfo();\n            }\n          });\n        } else {\n          _this4.$message({ message: '请填写卷名！', type: 'warning' });\n        }\n      });\n    },\n\n    //      章节信息回显\n    getChapterInfo: function getChapterInfo() {\n      var _this5 = this;\n\n      var reg1 = /<LG>[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}<\\/?LG ?\\/?>/;\n      var reg2 = /<LG>[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}<\\/?LG ?\\/?>/g;\n      this.$ajax('/sys-getNetWorkDateTime', '', function (time) {\n        if (time.returnCode === 200) {\n          _this5.$ajax('/admin/getChapterInfoShow', { chapterid: _this5.$route.params.cid }, function (json) {\n            _this5.update = false;\n            if (json.returnCode === 200) {\n              _this5.isRload = false;\n              _this5.original = JSON.parse(stringify_default()(json.data));\n              _this5.initial = [];\n              delete json.data.createChapterTime;\n              json.data.releaseTime = new Date(json.data.releaseTime);\n              _this5.oldChapterName = json.data.chapterTitle;\n              if (json.data.whetherPublic === 1) {\n                json.data.chapterContent = json.data.chapterContent.replace(/<H><LG>/g, '\\n\\n  ');\n              } else {\n                var idList = json.data.chapterContent.match(reg2);\n                var txtList = json.data.chapterContent.split(reg1);\n                json.data.chapterContent = json.data.chapterContent.replace(reg2, '\\n');\n                idList.forEach(function (item, index) {\n                  _this5.initial.push({\n                    uuid: item,\n                    content: _this5.$http.trim(txtList[index])\n                  });\n                });\n              }\n              _this5.ruleForm = json.data;\n              _this5.getVolume();\n              setTimeout(function () {\n                _this5.isRload = true;\n              }, 100);\n            }\n          });\n          var count = 0;\n          setInterval(function () {\n            count++;\n            _this5.$set(_this5.original, 'nowTime', time.data.beijing + count * 1000);\n          }, 1000);\n        }\n      }, 'get');\n    },\n\n    //      获取分卷列表\n    getVolume: function getVolume() {\n      var _this6 = this;\n\n      this.$ajax('/books-getvolume', { bookId: this.ruleForm.bookId }, function (json) {\n        if (json.returnCode === 200) {\n          _this6.volumeList = json.data;\n          _this6.update = true;\n        }\n      });\n    },\n\n    //      校验章节名是否重复\n    checkChapterName: function checkChapterName(event) {\n      if (event.target.value.length > 0) {}\n    },\n    editChange: function editChange(e) {\n      var parents = document.getElementById('content_edit_sole');\n      var pList = parents.childNodes;\n      this.ruleForm.chapterContent = this.$http.trim(parents.innerText);\n      if (pList.length > 0) {\n        for (var i = 0, len = pList.length; i < len; i++) {\n          //            重置样式,防止粘贴复制带来过来的内联样式\n          pList[i].style = null;\n          if (this.$http.trim(pList[i].innerText).length) {\n            if (!pList[i].getAttribute('uuid')) {\n              pList[i].setAttribute('uuid', '<H><LG>');\n            } else {\n              if (i > 0 && pList[i].getAttribute('uuid').length > 7 && pList[i - 1].getAttribute('uuid') === pList[i].getAttribute('uuid')) {\n                pList[i].setAttribute('uuid', '<H><LG>');\n              }\n            }\n            if (pList[i].childNodes.length > 1) {\n              pList[i].innerHTML = pList[i].innerText;\n            }\n          } else {\n            pList[i].setAttribute('uuid', '<H><LG>');\n          }\n        }\n      }\n      if (e.target.innerHTML.length < 1) {\n        //        保证父元素中至少存在一个p标签，以此确保换行后新增的标签为p\n        var p = document.createElement('p');\n        p.innerHTML = '<br>';\n        p.style = null;\n        parents.insertBefore(p, parents.childNodes[0]);\n      }\n    },\n    changeVolume: function changeVolume(val) {\n      var _this7 = this;\n\n      if (this.volumeList.length && val && this.update) {\n        this.$confirm('确认调整本章分卷?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this7.$ajax('/chapterToVolume', {\n            chapterid: _this7.ruleForm.id,\n            volumeid: val,\n            bookid: _this7.ruleForm.bookId\n          }, function (json) {\n            if (json.returnCode === 200) {\n              _this7.$message({\n                type: 'success',\n                message: '调整成功!'\n              });\n            }\n          });\n        }).catch(function () {\n          _this7.$message({ message: '已取消调整' });\n          _this7.getChapterInfo();\n        });\n      }\n    },\n    preventCopy: function preventCopy(e) {\n      if (e.keyCode === 17 && e.keyCode === 72) {\n        e.returnValue = false;\n        return false;\n      }\n    }\n  },\n  created: function created() {\n    var windowWidth = document.body.clientWidth;\n    if (windowWidth < 1024) {\n      this.dialogSize = 'small';\n    } else {\n      this.dialogSize = 'tiny';\n    }\n    this.getChapterInfo();\n  },\n\n  watch: {\n    'ruleForm.chapterContent': function ruleFormChapterContent(val) {\n      if (this.ruleForm.whetherPublic === 1) {\n        this.ruleForm.chapterContent = val.replace(/^\\s*\\n+\\s*/, '').replace(/\\s*\\n+\\s*/g, '\\n\\n　　');\n      }\n    },\n    'editContent': function editContent(val) {\n      var parents = document.getElementById('content_edit_sole');\n      var pList = parents.childNodes;\n      this.ruleForm.chapterContent = this.$http.trim(parents.innerText);\n      if (pList.length > 0 && this.isUpDate) {\n        for (var i = 0, len = pList.length; i < len; i++) {\n          //            重置样式,防止粘贴复制带来过来的内联样式\n          pList[i].style = null;\n          if (this.$http.trim(pList[i].innerText).length) {\n            pList[i].innerHTML = this.$http.trim(pList[i].innerHTML);\n            if (pList[i].childNodes.length > 1) {\n              pList[i].innerHTML = pList[i].innerText;\n            }\n          } else {\n            pList[i].setAttribute('uuid', '<H><LG>');\n          }\n        }\n      }\n    },\n    'ruleForm.authorWords': function ruleFormAuthorWords(val) {\n      if (this.$http.trim(val).length > 100) {\n        val = val.substr(0, 100);\n      }\n      this.ruleForm.authorWords = val.replace(/^\\s*\\n+\\s*/, '').replace(/\\s*\\n+\\s*/g, '\\n\\n　　');\n    }\n  },\n  computed: {\n    'length': function length() {\n      var sLen = 0;\n      var str = this.ruleForm.chapterContent;\n      try {\n        // 先将回车换行符做特殊处理\n        str = str.replace(/(\\r\\n+|\\s+| )+/g, '龘');\n        // 处理英文字符数字，连续字母、数字、英文符号视为一个单词\n        //          str = str.replace(/[\\x00-\\xff]/g,\"m\");\n        // 合并字符m，连续字母、数字、英文符号视为一个单词\n        //          str = str.replace(/m+/g,\"*\");\n        // 去掉回车换行符\n        str = str.replace(/龘+/g, '');\n        // 返回字数\n        sLen += str.length;\n      } catch (e) {\n        console.log(e);\n      }\n      this.ruleForm.chapterLength = sLen;\n      if (sLen > 20000) {\n        this.$message({ message: '字数长度不可超过20000！', type: 'error' });\n      }\n      return sLen;\n    },\n    'isChange': function isChange() {\n      var state = false;\n      if (this.original) {\n        if (this.original.whetherPublic) {\n          state = true;\n        } else {\n          if (this.original.releaseTime && this.original.releaseTime > this.original.nowTime) {\n            state = false;\n          } else {\n            state = true;\n          }\n        }\n      }\n      //        console.log(this.original.nowTime,this.original.releaseTime,state)\n      return state;\n    },\n    authority: function authority() {\n      return this.$store.state.userInfo.adminRolemenuanduserrole ? this.$store.state.userInfo.adminRolemenuanduserrole : {};\n    }\n  },\n  mounted: function mounted() {\n    var _this8 = this;\n\n    window.onresize = function () {\n      var width = document.body.clientWidth;\n      if (width < 1020) {\n        _this8.dialogSize = 'small';\n      } else {\n        _this8.dialogSize = 'tiny';\n      }\n    };\n  }\n});\n// CONCATENATED MODULE: ./node_modules/_vue-loader@14.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-c88e3cf8\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@14.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/book/edit_chapter.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('el-breadcrumb',{staticClass:\"mbt20\",attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',[_vm._v(\"书籍管理\")]),_vm._v(\" \"),_c('el-breadcrumb-item',{attrs:{\"to\":\"/book/list\"}},[_vm._v(\"书籍列表\")]),_vm._v(\" \"),_c('el-breadcrumb-item',{attrs:{\"to\":'/book_chapter_list/'+_vm.original.bookId}},[_vm._v(\"章节列表\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"编辑章节\")])],1),_vm._v(\" \"),_c('el-alert',{staticClass:\"mbt20\",attrs:{\"title\":\"操作说明\",\"type\":\"info\",\"show-icon\":\"\"}},[_c('div',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"\\n      文字说明文字说明文字说明文字说明文字说明文字说明\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"form-wrapper\"},[_c('el-form',{ref:\"editChapterForm\",staticClass:\"chapter-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":_vm.labelWidth,\"labelPosition\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"书籍名称\",\"prop\":\"bookTitle\"}},[_c('el-input',{staticStyle:{\"width\":\"260px\"},attrs:{\"readonly\":\"\"},model:{value:(_vm.ruleForm.bookTitle),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"bookTitle\", $$v)},expression:\"ruleForm.bookTitle\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"分卷名称\",\"prop\":\"volumeId\"}},[_c('el-select',{staticStyle:{\"width\":\"260px\"},attrs:{\"disabled\":!_vm.authority.updates,\"placeholder\":\"请选择分卷\"},on:{\"change\":_vm.changeVolume},model:{value:(_vm.ruleForm.volumeId),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"volumeId\", $$v)},expression:\"ruleForm.volumeId\"}},[[_vm._l((_vm.volumeList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.volumeName,\"value\":item.id}})}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"\",\"value\":\"\"},nativeOn:{\"click\":function($event){_vm.dialogFormVisible = true}}},[_vm._v(\"+新增分卷\")])]],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"章节名称\",\"prop\":\"chapterTitle\"}},[_c('el-input',{staticStyle:{\"width\":\"260px\"},model:{value:(_vm.ruleForm.chapterTitle),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterTitle\", $$v)},expression:\"ruleForm.chapterTitle\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"contentBox\",attrs:{\"label\":\"章节内容\",\"prop\":\"chapterContent\"}},[_c('el-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.ruleForm.whetherPublic==1),expression:\"ruleForm.whetherPublic==1\"}],staticClass:\"context\",attrs:{\"type\":\"textarea\"},model:{value:(_vm.ruleForm.chapterContent),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterContent\", $$v)},expression:\"ruleForm.chapterContent\"}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.ruleForm.whetherPublic!=1),expression:\"ruleForm.whetherPublic!=1\"}],staticClass:\"iframe-wrap\"},[(_vm.isRload)?_c('div',{attrs:{\"id\":\"content_edit_sole\",\"unselectable\":\"on\",\"contenteditable\":true},on:{\"input\":_vm.editChange},nativeOn:{\"keydown\":function($event){return _vm.preventCopy($event)}},model:{value:(_vm.editContent),callback:function ($$v) {_vm.editContent=$$v},expression:\"editContent\"}},[_vm._l((_vm.initial),function(item,$index){return [_c('p',{attrs:{\"uuid\":item.uuid}},[_vm._v(\"\\n                \"+_vm._s(item.content)+\"\\n              \")])]})],2):_vm._e()]),_vm._v(\" \"),_c('el-input',{staticClass:\"authorSay-wrap\",attrs:{\"type\":\"textarea\",\"placeholder\":\"作者的话（不超过100字）\"},model:{value:(_vm.ruleForm.authorWords),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"authorWords\", $$v)},expression:\"ruleForm.authorWords\"}}),_vm._v(\" \"),_c('span',{staticClass:\"words\"},[_vm._v(\"共 \"+_vm._s(_vm.length)+\" 字\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-top\":\"50px\"},attrs:{\"label-width\":_vm.labelWidth,\"label\":\"发布时间\",\"prop\":\"releaseTime\"}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择时间\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.ruleForm.releaseTime),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"releaseTime\", $$v)},expression:\"ruleForm.releaseTime\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[(_vm.ruleForm.whetherPublic)?_c('el-form-item',{attrs:{\"label-width\":'0px',\"prop\":\"issue\"}},[_c('el-checkbox',{model:{value:(_vm.ruleForm.issue),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"issue\", $$v)},expression:\"ruleForm.issue\"}},[_vm._v(\"立即发布\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label-width\":_vm.labelWidth,\"label\":\"是否VIP\"}},[_c('el-radio',{staticClass:\"radio\",attrs:{\"label\":0},model:{value:(_vm.ruleForm.chapterIsvip),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterIsvip\", $$v)},expression:\"ruleForm.chapterIsvip\"}},[_vm._v(\"普通\")]),_vm._v(\" \"),_c('el-radio',{staticClass:\"radio\",attrs:{\"label\":1},model:{value:(_vm.ruleForm.chapterIsvip),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterIsvip\", $$v)},expression:\"ruleForm.chapterIsvip\"}},[_vm._v(\"VIP\")])],1),_vm._v(\" \"),(_vm.authority.updates)?_c('el-form-item',{staticClass:\"tc\",staticStyle:{\"width\":\"820px\"},attrs:{\"label-width\":_vm.labelWidth}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm('create')}}},[_vm._v(\"确认编辑\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{staticClass:\"alertDialog\",attrs:{\"top\":\"45%\",\"title\":\"新增分卷\",\"visible\":_vm.dialogFormVisible},on:{\"open\":function($event){_vm.volumeForm.volumeName=''},\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"volumeForm\",attrs:{\"model\":_vm.volumeForm,\"rules\":_vm.rule,\"label-position\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"分卷名称\",\"prop\":\"volumeName\",\"label-width\":'80px'}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.volumeForm.volumeName),callback:function ($$v) {_vm.$set(_vm.volumeForm, \"volumeName\", $$v)},expression:\"volumeForm.volumeName\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addNewVolume('volumeForm')}}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/_vue-loader@14.2.2@vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(\"18Nq\");\n\n// CONCATENATED MODULE: ./src/components/book/edit_chapter.vue\nfunction injectStyle (context) {\n  __webpack_require__(\"6JdH\")\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer[\"a\" /* default */])(\n  edit_chapter,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var book_edit_chapter = __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/50.97c7951eecb59edd0148.js","function injectStyle (context) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/selector?type=styles&index=0!./edit_chapter.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/selector?type=script&index=0!./edit_chapter.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/selector?type=script&index=0!./edit_chapter.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c88e3cf8\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/selector?type=template&index=0!./edit_chapter.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/_vue-loader@14.2.2@vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/book/edit_chapter.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"wrapper\">\n    <el-breadcrumb class=\"mbt20\" separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item>书籍管理</el-breadcrumb-item>\n      <el-breadcrumb-item to=\"/book/list\">书籍列表</el-breadcrumb-item>\n      <el-breadcrumb-item :to=\"'/book_chapter_list/'+original.bookId\">章节列表</el-breadcrumb-item>\n      <el-breadcrumb-item>编辑章节</el-breadcrumb-item>\n    </el-breadcrumb>\n  \n    <el-alert\n      class=\"mbt20\"\n      title=\"操作说明\"\n      type=\"info\"\n      show-icon>\n      <div slot>\n        文字说明文字说明文字说明文字说明文字说明文字说明\n      </div>\n    </el-alert>\n    \n    <div class=\"form-wrapper\">\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"editChapterForm\" :label-width=\"labelWidth\" labelPosition=\"left\" class=\"chapter-ruleForm\">\n        <el-form-item label=\"书籍名称\" prop=\"bookTitle\">\n          <el-input style=\"width: 260px\" readonly v-model=\"ruleForm.bookTitle\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分卷名称\" prop=\"volumeId\">\n          <el-select :disabled=\"!authority.updates\" style=\"width: 260px;\" v-model=\"ruleForm.volumeId\" placeholder=\"请选择分卷\" @change=\"changeVolume\">\n            <template>\n              <el-option\n                v-for=\"item in volumeList\"\n                :key=\"item.id\"\n                :label=\"item.volumeName\"\n                :value=\"item.id\">\n              </el-option>\n              <el-option @click.native=\"dialogFormVisible = true\" label=\"\" value=\"\">+新增分卷</el-option>\n            </template>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"章节名称\" prop=\"chapterTitle\">\n          <el-input style=\"width: 260px\" v-model=\"ruleForm.chapterTitle\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"章节内容\" class=\"contentBox\" prop=\"chapterContent\">\n          <el-input v-show=\"ruleForm.whetherPublic==1\" type=\"textarea\" class=\"context\" v-model=\"ruleForm.chapterContent\"></el-input>\n          <div v-show=\"ruleForm.whetherPublic!=1\" class=\"iframe-wrap\">\n            <div id=\"content_edit_sole\" unselectable=\"on\" @keydown.native=\"preventCopy\" v-if=\"isRload\" :contenteditable=\"true\" v-model=\"editContent\" @input=\"editChange\" >\n              <template v-for=\"(item,$index) in initial\">\n                <p :uuid=\"item.uuid\">\n                  {{item.content}}\n                </p>\n              </template>\n            </div>\n          </div>\n          <el-input class=\"authorSay-wrap\" type=\"textarea\" v-model=\"ruleForm.authorWords\" placeholder=\"作者的话（不超过100字）\"></el-input>\n          <!--<div class=\"authorSay-wrap\">-->\n          <!--<textarea class=\"authorSay\" v-model=\"ruleForm.authorWords\" placeholder=\"作者的话（不超过100字）\"></textarea>-->\n          <!--</div>-->\n          <span class=\"words\">共 {{length}} 字</span>\n        </el-form-item>\n        <el-form-item :label-width=\"labelWidth\" label=\"发布时间\" style=\"margin-top:50px\" prop=\"releaseTime\">\n          <el-col :span=\"8\">\n            <el-date-picker\n              type=\"datetime\"\n              placeholder=\"选择时间\"\n              :picker-options=\"pickerOptions\"\n              v-model=\"ruleForm.releaseTime\">\n            </el-date-picker>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"ruleForm.whetherPublic\" :label-width=\"'0px'\" prop=\"issue\">\n              <el-checkbox v-model=\"ruleForm.issue\">立即发布</el-checkbox>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item :label-width=\"labelWidth\" label=\"是否VIP\">\n          <el-radio class=\"radio\" v-model=\"ruleForm.chapterIsvip\" :label=\"0\">普通</el-radio>\n          <el-radio class=\"radio\" v-model=\"ruleForm.chapterIsvip\" :label=\"1\" >VIP</el-radio>\n        </el-form-item>\n        \n        <el-form-item v-if=\"authority.updates\" :label-width=\"labelWidth\" style=\"width: 820px\" class=\"tc\">\n          <el-button type=\"primary\" @click=\"submitForm('create')\">确认编辑</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    \n    <el-dialog\n      class=\"alertDialog\"\n      @open=\"volumeForm.volumeName=''\"\n      top=\"45%\"\n      title=\"新增分卷\"\n      :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"volumeForm\" :rules=\"rule\" ref=\"volumeForm\" label-position=\"left\">\n        <el-form-item label=\"分卷名称\" prop=\"volumeName\" :label-width=\"'80px'\">\n          <el-input v-model=\"volumeForm.volumeName\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addNewVolume('volumeForm')\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  \n  export default {\n    data() {\n      const validateVolume = (rule, value, callback) => {\n        if (!value || this.$http.trim(value).length < 1) {\n          this.volumeForm.volumeName = ''\n          callback(new Error('卷名不能为空'))\n        } else {\n          this.$ajax('/books-getCheckVolume', {\n            volumeName: value,\n            bookid: this.ruleForm.bookId\n          }, json => {\n            if (json.returnCode === 200) {\n              callback()\n            } else {\n              callback(new Error(json.msg))\n            }\n          })\n        }\n      }\n      const validateCheckCn = (rule, value, callback) => {\n        value = this.$http.trim(value)\n        if (!value || this.$http.trim(value).length < 1) {\n          this.ruleForm.chapterTitle = ''\n          callback(new Error('请输入章节名称'))\n        } else {\n          if (this.$http.trim(value) === this.oldChapterName) {\n            callback()\n          } else {\n            this.$ajax('/chapter-checkName', {\n              chapterName: value,\n              bookId: this.ruleForm.bookId\n            }, json => {\n              if (json.returnCode === 200) {\n                callback()\n              } else {\n                this.$message('章节名重复，请重新填写！')\n                callback(new Error('章节名重复，请重新填写！'))\n              }\n            })\n          }\n        }\n      }\n      return {\n        pickerOptions: {\n          disabledDate(time) {\n            return time.getTime() < Date.now() - 8.64e7\n          }\n        },\n        isLoading: undefined,\n        isRload: true,\n        iframeShow: 'hidden',\n        dialogSize: 'tiny',\n        original: {}, // 原始数据\n        volumeList: [], // 书籍卷列表\n        isAutoPublish: false,\n        labelWidth: '136px',\n        dialogFormVisible: false,\n        editContent: '',\n        initial: [],\n        cidList: [], // 章节段ID列表\n        volumeForm: {\n          volumeName: ''\n        },\n        oldChapterName: '',\n        ruleForm: {  // 章节信息\n          bookTitle: '',\n          chapterTitle: '',\n          volumeId: null,\n          releaseTime: null,\n          chapterContent: '',\n          whetherPublic: 0,\n          chapterLength: 0,\n          chapterIsvip: 0,\n          authorWords: '',\n          issue: false,\n          update: false\n        },\n        rule: {\n          volumeName: [\n            { required: true, validator: validateVolume, trigger: 'blur' }\n          ]\n        },\n        rules: {\n          chapterTitle: [\n            { required: true, validator: validateCheckCn, trigger: 'blur' }\n          ],\n          volumeId: [\n            { required: true, type: 'number', message: '请选择分卷', trigger: 'change' }\n          ],\n          bookTitle: [\n            { required: true, message: '请输入书籍名称', trigger: 'blur' }\n          ],\n          chapterContent: [\n            { required: true, message: '请添加章节内容', trigger: 'blur' }\n          ],\n          releaseTime: [\n            { required: true, type: 'date', message: '请选取时间', trigger: 'blur' }\n          ]\n        }\n      }\n  },\n    methods: {\n//        添加新章节\n      submitForm(type) {\n        this.isLoading = this.$loading({\n          lock: true,\n          text: 'Loading',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n        this.$refs['editChapterForm'].validate((valid) => {\n          if (valid) {\n            if (type === 'draft') {\n              this.ruleForm.whetherPublic = 1\n            }\n            this.editChapter()\n          } else {\n            this.$nextTick(() => {\n              this.isLoading.close()\n            })\n            this.$message({ message: '请完善信息后提交！', type: 'warning' })\n            return false\n          }\n        })\n      },\n      editChapter() {\n//          首先获取网络时间\n        if (this.ruleForm.chapterLength > 20000) {\n          this.isLoading.close()\n          this.$confirm('文章内容超出字数长度限制，请保证字数长度在20000以内！', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          })\n          return false\n        }\n        const cloneData = JSON.parse(JSON.stringify(this.ruleForm))\n        const release = () => {\n          this.$ajax('/admin/updateChapterInfo', cloneData, json => {\n            this.isLoading.close()\n            if (json.returnCode === 200) {\n              this.$confirm(!cloneData.whetherPublic ? '编辑成功' : (cloneData.whetherPublic === 1 ? '保存草稿成功' : '发布成功'), '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              }).then(() => {\n                this.getChapterInfo()\n              }).catch(() => {\n                this.getChapterInfo()\n              })\n            }\n          })\n        }\n//        草稿\n        if (this.ruleForm.whetherPublic === 1) {\n//            发布草稿\n          cloneData.chapterContent = this.$http.trim(cloneData.chapterContent).replace(/\\n+\\s+/g, '<H><LG>') + '<H><LG>'\n          cloneData.whetherPublic = cloneData.issue ? 2 : 1\n          this.$ajax('/sys-getNetWorkDateTime', '', time => {\n            if (time.returnCode === 200) {\n              cloneData.releaseTime = this.$formTime(time.data.beijing, 'long')\n              release()\n            } else {\n              this.isLoading.close()\n            }\n          }, 'get')\n        } else {\n//        非草稿\n          const nodeList = document.getElementById('content_edit_sole').childNodes\n          cloneData.chapterContent = ''\n          for (let i = 0, len = nodeList.length; i < len; i++) {\n            if (this.$http.trim(nodeList[i].innerText).length > 0) {\n              cloneData.chapterContent += this.$http.trim(nodeList[i].innerText) + nodeList[i].getAttribute('uuid')\n            }\n          }\n          cloneData.releaseTime = this.$formTime(cloneData.releaseTime, 'long')\n          release()\n        }\n      },\n//      新增分卷\n      addNewVolume(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            this.$ajax('/books-addvolume', {\n              volumeName: this.volumeForm.volumeName,\n              bookName: this.ruleForm.bookTitle,\n              bookid: this.$route.params.bid\n            }, json => {\n              if (json.returnCode === 200) {\n                this.dialogFormVisible = false\n                this.$message('添加成功')\n                this.getChapterInfo()\n              }\n            })\n          } else {\n            this.$message({ message: '请填写卷名！', type: 'warning' })\n          }\n        })\n      },\n//      章节信息回显\n      getChapterInfo() {\n        const reg1 = /<LG>[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}<\\/?LG ?\\/?>/\n        const reg2 = /<LG>[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}<\\/?LG ?\\/?>/g\n        this.$ajax('/sys-getNetWorkDateTime', '', time => {\n          if (time.returnCode === 200) {\n            this.$ajax('/admin/getChapterInfoShow', { chapterid: this.$route.params.cid }, json => {\n              this.update = false\n              if (json.returnCode === 200) {\n                this.isRload = false\n                this.original = JSON.parse(JSON.stringify(json.data))\n                this.initial = []\n                delete json.data.createChapterTime\n                json.data.releaseTime = new Date(json.data.releaseTime)\n                this.oldChapterName = json.data.chapterTitle\n                if (json.data.whetherPublic === 1) {\n                  json.data.chapterContent = json.data.chapterContent.replace(/<H><LG>/g, '\\n\\n  ')\n                } else {\n                  const idList = json.data.chapterContent.match(reg2)\n                  const txtList = json.data.chapterContent.split(reg1)\n                  json.data.chapterContent = json.data.chapterContent.replace(reg2, '\\n')\n                  idList.forEach((item, index) => {\n                    this.initial.push({\n                      uuid: item,\n                      content: this.$http.trim(txtList[index])\n                    })\n                  })\n                }\n                this.ruleForm = json.data\n                this.getVolume()\n                setTimeout(() => {\n                  this.isRload = true\n                }, 100)\n              }\n            })\n            let count = 0\n            setInterval(() => {\n              count++\n              this.$set(this.original, 'nowTime', time.data.beijing + count * 1000)\n            }, 1000)\n          }\n        }, 'get')\n      },\n      //      获取分卷列表\n      getVolume() {\n        this.$ajax('/books-getvolume', { bookId: this.ruleForm.bookId }, json => {\n          if (json.returnCode === 200) {\n            this.volumeList = json.data\n            this.update = true\n          }\n        })\n      },\n//      校验章节名是否重复\n      checkChapterName(event) {\n        if (event.target.value.length > 0) {\n        }\n      },\n      editChange(e) {\n        const parents = document.getElementById('content_edit_sole')\n        const pList = parents.childNodes\n        this.ruleForm.chapterContent = this.$http.trim(parents.innerText)\n        if (pList.length > 0) {\n          for (let i = 0, len = pList.length; i < len; i++) {\n//            重置样式,防止粘贴复制带来过来的内联样式\n            pList[i].style = null\n            if (this.$http.trim(pList[i].innerText).length) {\n              if (!pList[i].getAttribute('uuid')) {\n                pList[i].setAttribute('uuid', '<H><LG>')\n              } else {\n                if (i > 0 && pList[i].getAttribute('uuid').length > 7 && pList[(i - 1)].getAttribute('uuid') === pList[i].getAttribute('uuid')) {\n                  pList[i].setAttribute('uuid', '<H><LG>')\n                }\n              }\n              if (pList[i].childNodes.length > 1) {\n                pList[i].innerHTML = pList[i].innerText\n              }\n            } else {\n              pList[i].setAttribute('uuid', '<H><LG>')\n            }\n          }\n        }\n        if (e.target.innerHTML.length < 1) {\n//        保证父元素中至少存在一个p标签，以此确保换行后新增的标签为p\n          const p = document.createElement('p')\n          p.innerHTML = '<br>'\n          p.style = null\n          parents.insertBefore(p, parents.childNodes[0])\n        }\n      },\n      changeVolume(val) {\n        if (this.volumeList.length && val && this.update) {\n          this.$confirm('确认调整本章分卷?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            this.$ajax('/chapterToVolume', {\n              chapterid: this.ruleForm.id,\n              volumeid: val,\n              bookid: this.ruleForm.bookId\n            }, json => {\n              if (json.returnCode === 200) {\n                this.$message({\n                  type: 'success',\n                  message: '调整成功!'\n                })\n              }\n            })\n          }).catch(() => {\n            this.$message({ message: '已取消调整' })\n            this.getChapterInfo()\n          })\n        }\n      },\n      preventCopy(e) {\n        if (e.keyCode === 17 && e.keyCode === 72) {\n          e.returnValue = false\n          return false\n        }\n      }\n    },\n    created() {\n      const windowWidth = document.body.clientWidth\n      if (windowWidth < 1024) {\n        this.dialogSize = 'small'\n      } else {\n        this.dialogSize = 'tiny'\n      }\n      this.getChapterInfo()\n  },\n    watch: {\n      'ruleForm.chapterContent': function(val) {\n        if (this.ruleForm.whetherPublic === 1) {\n          this.ruleForm.chapterContent = val.replace(/^\\s*\\n+\\s*/, '').replace(/\\s*\\n+\\s*/g, '\\n\\n　　')\n        }\n      },\n      'editContent': function(val) {\n        const parents = document.getElementById('content_edit_sole')\n        const pList = parents.childNodes\n        this.ruleForm.chapterContent = this.$http.trim(parents.innerText)\n        if (pList.length > 0 && this.isUpDate) {\n          for (let i = 0, len = pList.length; i < len; i++) {\n//            重置样式,防止粘贴复制带来过来的内联样式\n            pList[i].style = null\n            if (this.$http.trim(pList[i].innerText).length) {\n              pList[i].innerHTML = this.$http.trim(pList[i].innerHTML)\n              if (pList[i].childNodes.length > 1) {\n                pList[i].innerHTML = pList[i].innerText\n              }\n            } else {\n              pList[i].setAttribute('uuid', '<H><LG>')\n            }\n          }\n        }\n      },\n      'ruleForm.authorWords': function(val) {\n        if (this.$http.trim(val).length > 100) {\n          val = val.substr(0, 100)\n        }\n        this.ruleForm.authorWords = val.replace(/^\\s*\\n+\\s*/, '').replace(/\\s*\\n+\\s*/g, '\\n\\n　　')\n      }\n    },\n    computed: {\n      'length': function() {\n        let sLen = 0\n        let str = this.ruleForm.chapterContent\n        try {\n          // 先将回车换行符做特殊处理\n          str = str.replace(/(\\r\\n+|\\s+| )+/g, '龘')\n        // 处理英文字符数字，连续字母、数字、英文符号视为一个单词\n//          str = str.replace(/[\\x00-\\xff]/g,\"m\");\n        // 合并字符m，连续字母、数字、英文符号视为一个单词\n//          str = str.replace(/m+/g,\"*\");\n        // 去掉回车换行符\n          str = str.replace(/龘+/g, '')\n        // 返回字数\n          sLen += str.length\n        } catch (e) {\n          console.log(e)\n        }\n        this.ruleForm.chapterLength = sLen\n        if (sLen > 20000) {\n          this.$message({ message: '字数长度不可超过20000！', type: 'error' })\n        }\n        return sLen\n      },\n      'isChange': function() {\n        let state = false\n        if (this.original) {\n          if (this.original.whetherPublic) {\n            state = true\n          } else {\n            if (this.original.releaseTime && this.original.releaseTime > this.original.nowTime) {\n              state = false\n            } else {\n              state = true\n            }\n          }\n        }\n//        console.log(this.original.nowTime,this.original.releaseTime,state)\n        return state\n      },\n      authority: function() {\n        return this.$store.state.userInfo.adminRolemenuanduserrole ? this.$store.state.userInfo.adminRolemenuanduserrole : {}\n      }\n    },\n    mounted() {\n      window.onresize = () => {\n        const width = document.body.clientWidth\n        if (width < 1020) {\n          this.dialogSize = 'small'\n        } else {\n          this.dialogSize = 'tiny'\n        }\n      }\n  }\n  }\n</script>\n\n<style lang=\"stylus\" type=\"text/stylus\" rel=\"stylesheet/stylus\">\n  .chapter-ruleForm\n    .iframe-wrap\n      #content_edit_sole\n        width 100%\n        height 100%\n        outline none\n        padding 15px\n        user-select none\n        overflow auto\n        box-sizing border-box\n        >p\n          text-indent 2em\n          padding-bottom 1em\n          font-size 16px\n          user-select none\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/book/edit_chapter.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('el-breadcrumb',{staticClass:\"mbt20\",attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',[_vm._v(\"书籍管理\")]),_vm._v(\" \"),_c('el-breadcrumb-item',{attrs:{\"to\":\"/book/list\"}},[_vm._v(\"书籍列表\")]),_vm._v(\" \"),_c('el-breadcrumb-item',{attrs:{\"to\":'/book_chapter_list/'+_vm.original.bookId}},[_vm._v(\"章节列表\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"编辑章节\")])],1),_vm._v(\" \"),_c('el-alert',{staticClass:\"mbt20\",attrs:{\"title\":\"操作说明\",\"type\":\"info\",\"show-icon\":\"\"}},[_c('div',{attrs:{\"slot\":\"\"},slot:\"default\"},[_vm._v(\"\\n      文字说明文字说明文字说明文字说明文字说明文字说明\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"form-wrapper\"},[_c('el-form',{ref:\"editChapterForm\",staticClass:\"chapter-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":_vm.labelWidth,\"labelPosition\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"书籍名称\",\"prop\":\"bookTitle\"}},[_c('el-input',{staticStyle:{\"width\":\"260px\"},attrs:{\"readonly\":\"\"},model:{value:(_vm.ruleForm.bookTitle),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"bookTitle\", $$v)},expression:\"ruleForm.bookTitle\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"分卷名称\",\"prop\":\"volumeId\"}},[_c('el-select',{staticStyle:{\"width\":\"260px\"},attrs:{\"disabled\":!_vm.authority.updates,\"placeholder\":\"请选择分卷\"},on:{\"change\":_vm.changeVolume},model:{value:(_vm.ruleForm.volumeId),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"volumeId\", $$v)},expression:\"ruleForm.volumeId\"}},[[_vm._l((_vm.volumeList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.volumeName,\"value\":item.id}})}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"\",\"value\":\"\"},nativeOn:{\"click\":function($event){_vm.dialogFormVisible = true}}},[_vm._v(\"+新增分卷\")])]],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"章节名称\",\"prop\":\"chapterTitle\"}},[_c('el-input',{staticStyle:{\"width\":\"260px\"},model:{value:(_vm.ruleForm.chapterTitle),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterTitle\", $$v)},expression:\"ruleForm.chapterTitle\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"contentBox\",attrs:{\"label\":\"章节内容\",\"prop\":\"chapterContent\"}},[_c('el-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.ruleForm.whetherPublic==1),expression:\"ruleForm.whetherPublic==1\"}],staticClass:\"context\",attrs:{\"type\":\"textarea\"},model:{value:(_vm.ruleForm.chapterContent),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterContent\", $$v)},expression:\"ruleForm.chapterContent\"}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.ruleForm.whetherPublic!=1),expression:\"ruleForm.whetherPublic!=1\"}],staticClass:\"iframe-wrap\"},[(_vm.isRload)?_c('div',{attrs:{\"id\":\"content_edit_sole\",\"unselectable\":\"on\",\"contenteditable\":true},on:{\"input\":_vm.editChange},nativeOn:{\"keydown\":function($event){return _vm.preventCopy($event)}},model:{value:(_vm.editContent),callback:function ($$v) {_vm.editContent=$$v},expression:\"editContent\"}},[_vm._l((_vm.initial),function(item,$index){return [_c('p',{attrs:{\"uuid\":item.uuid}},[_vm._v(\"\\n                \"+_vm._s(item.content)+\"\\n              \")])]})],2):_vm._e()]),_vm._v(\" \"),_c('el-input',{staticClass:\"authorSay-wrap\",attrs:{\"type\":\"textarea\",\"placeholder\":\"作者的话（不超过100字）\"},model:{value:(_vm.ruleForm.authorWords),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"authorWords\", $$v)},expression:\"ruleForm.authorWords\"}}),_vm._v(\" \"),_c('span',{staticClass:\"words\"},[_vm._v(\"共 \"+_vm._s(_vm.length)+\" 字\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-top\":\"50px\"},attrs:{\"label-width\":_vm.labelWidth,\"label\":\"发布时间\",\"prop\":\"releaseTime\"}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择时间\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.ruleForm.releaseTime),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"releaseTime\", $$v)},expression:\"ruleForm.releaseTime\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[(_vm.ruleForm.whetherPublic)?_c('el-form-item',{attrs:{\"label-width\":'0px',\"prop\":\"issue\"}},[_c('el-checkbox',{model:{value:(_vm.ruleForm.issue),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"issue\", $$v)},expression:\"ruleForm.issue\"}},[_vm._v(\"立即发布\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label-width\":_vm.labelWidth,\"label\":\"是否VIP\"}},[_c('el-radio',{staticClass:\"radio\",attrs:{\"label\":0},model:{value:(_vm.ruleForm.chapterIsvip),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterIsvip\", $$v)},expression:\"ruleForm.chapterIsvip\"}},[_vm._v(\"普通\")]),_vm._v(\" \"),_c('el-radio',{staticClass:\"radio\",attrs:{\"label\":1},model:{value:(_vm.ruleForm.chapterIsvip),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"chapterIsvip\", $$v)},expression:\"ruleForm.chapterIsvip\"}},[_vm._v(\"VIP\")])],1),_vm._v(\" \"),(_vm.authority.updates)?_c('el-form-item',{staticClass:\"tc\",staticStyle:{\"width\":\"820px\"},attrs:{\"label-width\":_vm.labelWidth}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm('create')}}},[_vm._v(\"确认编辑\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{staticClass:\"alertDialog\",attrs:{\"top\":\"45%\",\"title\":\"新增分卷\",\"visible\":_vm.dialogFormVisible},on:{\"open\":function($event){_vm.volumeForm.volumeName=''},\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"volumeForm\",attrs:{\"model\":_vm.volumeForm,\"rules\":_vm.rule,\"label-position\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"分卷名称\",\"prop\":\"volumeName\",\"label-width\":'80px'}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.volumeForm.volumeName),callback:function ($$v) {_vm.$set(_vm.volumeForm, \"volumeName\", $$v)},expression:\"volumeForm.volumeName\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addNewVolume('volumeForm')}}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@14.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-c88e3cf8\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@14.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/book/edit_chapter.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}